// C++可以在运行时分配内存，前面都将指针初始化为变量的地址；变量是在编译时分配的有名称的内存。指针只是为可以通过名称直接访问的内存提供了一个别名。
// 指针真正的用武之地在于，在运行阶段分配未命名的内存以存储值。在这种情况下，只能通过指针来访问内存。在C语言中，可以通过库函数malloc()来分配内存；在C++中仍可以这么做，但C++还有更好的办法——new运算符。

int main()
{
    int * pn = new int; // 只能通过指针进行访问，即pn指向的内存没有名称。从堆（heap）或自由存储区（free store）的内存区域分配内存。

    int higgens; // 存储在 栈（stack）的内存区域中
    int * pt = &higgens;
    
    return 0;
}