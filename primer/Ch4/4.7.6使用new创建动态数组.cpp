// 如果通过声明来创建数组，则在程序被编译时将为它分配内存空间。在编译时给数组分配内存被称为静态联编（static binding），这意味着数组是在编译时加入到程序中的。
// 但使用new时，在运行阶段需要数组，则创建；如果不需要，则不创建。还可以在程序运行时选择数组的长度。这被称为动态联编（dynamic binding），意味着数组是在程序运行时创建的，这种数组叫做动态数组。
// 使用静态联编时，必须在编写程序时指定数组的长度；使用动态联编时，程序将在运行时确定数组的长度

int main()
{
// 1.使用new创建动态数组
    int * psome = new int [10];
    delete [] psome; // 方括号告诉程序，应释放整个数组，而不仅仅是指针指向的元素
/*
总之，使用new和delete时，应遵守以下规则。
- 不要使用delete来释放不是new分配的内存
- 不要使用delete释放同一个内存块两次
- 如果使用new []为数组分配内存，则应使用delete []来释放
- 如果使用new []为一个实体分配内存，则应使用delete（没有方括号）来释放。
- 对空指针应用delete是安全的。
*/

    
    return 0;
}